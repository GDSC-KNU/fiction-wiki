{
  "version": 3,
  "names": [
    "React",
    "selectWord",
    "image",
    "name",
    "keyCommand",
    "shortcuts",
    "value",
    "buttonProps",
    "title",
    "icon",
    "execute",
    "state",
    "api",
    "newSelectionRange",
    "text",
    "selection",
    "state1",
    "setSelectionRange",
    "imageTemplate",
    "selectedText",
    "val",
    "command",
    "replaceSelection",
    "replace",
    "start",
    "indexOf",
    "end",
    "length"
  ],
  "sources": [
    "../../src/commands/image.tsx"
  ],
  "sourcesContent": [
    "import * as React from 'react';\nimport { ICommand, ExecuteState, TextAreaTextApi } from './';\nimport { selectWord } from '../utils/markdownUtils';\n\nexport const image: ICommand = {\n  name: 'image',\n  keyCommand: 'image',\n  shortcuts: 'ctrlcmd+k',\n  value: '![image]({{text}})',\n  buttonProps: { 'aria-label': 'Add image (ctrl + k)', title: 'Add image (ctrl + k)' },\n  icon: (\n    <svg width=\"13\" height=\"13\" viewBox=\"0 0 20 20\">\n      <path\n        fill=\"currentColor\"\n        d=\"M15 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-7H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 13l-6-5-2 2-4-5-4 8V4h16v11z\"\n      />\n    </svg>\n  ),\n  execute: (state: ExecuteState, api: TextAreaTextApi) => {\n    // Select everything\n    const newSelectionRange = selectWord({ text: state.text, selection: state.selection });\n    const state1 = api.setSelectionRange(newSelectionRange);\n    // Replaces the current selection with the image\n    const imageTemplate = state1.selectedText || 'https://example.com/your-image.png';\n    const val = state.command.value || '';\n    api.replaceSelection(val.replace(/({{text}})/gi, imageTemplate));\n\n    const start = state1.selection.start + val.indexOf('{{text}}');\n    let end = state1.selection.start + val.indexOf('{{text}}') + (state1.selection.end - state1.selection.start);\n    if (!state1.selectedText) {\n      end = end + imageTemplate.length;\n    }\n    api.setSelectionRange({ start, end });\n  },\n};\n"
  ],
  "mappings": "AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,UAAU,QAAQ,wBAAwB;AAAC;AAEpD,OAAO,IAAMC,KAAe,GAAG;EAC7BC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE,OAAO;EACnBC,SAAS,EAAE,WAAW;EACtBC,KAAK,EAAE,oBAAoB;EAC3BC,WAAW,EAAE;IAAE,YAAY,EAAE,sBAAsB;IAAEC,KAAK,EAAE;EAAuB,CAAC;EACpFC,IAAI,eACF;IAAK,KAAK,EAAC,IAAI;IAAC,MAAM,EAAC,IAAI;IAAC,OAAO,EAAC,WAAW;IAAA,uBAC7C;MACE,IAAI,EAAC,cAAc;MACnB,CAAC,EAAC;IAAkK;EACpK,EAEL;EACDC,OAAO,EAAE,CAACC,KAAmB,EAAEC,GAAoB,KAAK;IACtD;IACA,IAAMC,iBAAiB,GAAGZ,UAAU,CAAC;MAAEa,IAAI,EAAEH,KAAK,CAACG,IAAI;MAAEC,SAAS,EAAEJ,KAAK,CAACI;IAAU,CAAC,CAAC;IACtF,IAAMC,MAAM,GAAGJ,GAAG,CAACK,iBAAiB,CAACJ,iBAAiB,CAAC;IACvD;IACA,IAAMK,aAAa,GAAGF,MAAM,CAACG,YAAY,IAAI,oCAAoC;IACjF,IAAMC,GAAG,GAAGT,KAAK,CAACU,OAAO,CAACf,KAAK,IAAI,EAAE;IACrCM,GAAG,CAACU,gBAAgB,CAACF,GAAG,CAACG,OAAO,CAAC,cAAc,EAAEL,aAAa,CAAC,CAAC;IAEhE,IAAMM,KAAK,GAAGR,MAAM,CAACD,SAAS,CAACS,KAAK,GAAGJ,GAAG,CAACK,OAAO,CAAC,UAAU,CAAC;IAC9D,IAAIC,GAAG,GAAGV,MAAM,CAACD,SAAS,CAACS,KAAK,GAAGJ,GAAG,CAACK,OAAO,CAAC,UAAU,CAAC,IAAIT,MAAM,CAACD,SAAS,CAACW,GAAG,GAAGV,MAAM,CAACD,SAAS,CAACS,KAAK,CAAC;IAC5G,IAAI,CAACR,MAAM,CAACG,YAAY,EAAE;MACxBO,GAAG,GAAGA,GAAG,GAAGR,aAAa,CAACS,MAAM;IAClC;IACAf,GAAG,CAACK,iBAAiB,CAAC;MAAEO,KAAK;MAAEE;IAAI,CAAC,CAAC;EACvC;AACF,CAAC"
}